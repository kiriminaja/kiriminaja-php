<?php

namespace KiriminAja\Unit\Shipping\ScheduleService;

require_once(__DIR__.'/../ShippingMock.php');

use KiriminAja\Services\Shipping\ScheduleService;
use KiriminAja\Unit\Shipping\ShippingMock;
use PHPUnit\Framework\TestCase;

class ScheduleServiceSuccessTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        (new ShippingMock())->shippingMock()
            ->shouldReceive([
                'schedules' => [
                    true,
                    [
                        'status'    => true,
                        'text'      => 'Success to fetch schedules data',
                        'schedules' => [
                            (object) [
                                "clock" => "2022-11-03 17:00:00",
                                "until" => "22:00",
                                "expired" => 1667475000,
                                "libur" => false
                            ],
                            (object) [
                                "clock" => "2022-11-04 08:00:00",
                                "until" => "22:00",
                                "expired" => 1667532600,
                                "libur" => false
                            ]
                        ]
                    ]
                ]
            ]);
    }

    public function test()
    {

        $expect = array(
            (object) [
                "clock" => "2022-11-03 17:00:00",
                "until" => "22:00",
                "expired" => 1667475000,
                "libur" => false
            ],
            (object) [
                "clock" => "2022-11-04 08:00:00",
                "until" => "22:00",
                "expired" => 1667532600,
                "libur" => false
            ]
        );

        $result = (new ScheduleService())->call();

        self::assertTrue($result->status);
        self::assertEquals('loaded', $result->message);
        self::assertEquals($expect, $result->data);
    }
}
